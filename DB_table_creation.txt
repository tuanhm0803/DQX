CREATE TABLE dq.dq_sql_scripts (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    content TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE dq.bad_detail (
	rule_id varchar(20),
	source_id varchar(20),
	source_uid varchar(500),
	data_value varchar(2000),
	txn_date date
);

CREATE TABLE dq.dq_schedules (
    id SERIAL PRIMARY KEY,
    script_id INTEGER NOT NULL REFERENCES dq.dq_sql_scripts(id) ON DELETE CASCADE,
    schedule_type VARCHAR(10) NOT NULL, -- 'daily', 'weekly', 'monthly'
    execution_time TIME NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE dq.users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    full_name VARCHAR(100),
    hashed_password VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create index for faster lookups
CREATE INDEX IF NOT EXISTS idx_user_username ON dq.users(username);
CREATE INDEX IF NOT EXISTS idx_user_email ON dq.users(email);

;
-- dq.source_ref definition

-- Drop table

-- DROP TABLE dq.source_ref;

CREATE TABLE dq.source_ref (
	source_id varchar(50) NULL,
	source_name varchar(500) NULL,
	source_desc varchar(2000) NULL
);

-- dq.rule_ref definition

-- Drop table

-- DROP TABLE dq.rule_ref;

CREATE TABLE dq.rule_ref (
	rule_id varchar(50) NULL,
	rule_name varchar(500) NULL,
	rule_desc varchar(2000) NULL
);